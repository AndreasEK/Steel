buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
}

// apply Gradle plugins
plugins {
    id 'java'
    id 'maven'
    id 'eclipse'
    id 'idea'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '1.2.0'
}

apply plugin: 'license'

defaultTasks 'clean', 'licenseFormat', 'build', 'shadowJar'

// Project information
group = 'net.caseif.steel'
version = '1.0.0-SNAPSHOT'

// Extended project information
ext.projectName = 'steel'
ext.description = 'The implementation of Flint minigame framework for the Bukkit Minecraft server mod.'
ext.inceptionYear = '2015'
ext.packaging = 'jar'

sourceCompatibility = project('Flint').sourceCompatibility
targetCompatibility = project('Flint').targetCompatibility

configurations {
    shadow
    compile {
        extendsFrom shadow
    }
}

// Project repositories
repositories {
    mavenCentral()
    maven { url 'http://repo.caseif.net/content/groups/public/' }
    maven { url 'http://repo.bukkit.org/content/groups/public/' }
    maven { url 'http://hub.spigotmc.org/nexus/content/groups/public/' }
    maven { url 'http://repo.gravitydevelopment.net' }
    maven { url 'http://repo.mcstats.org/content/repositories/public' }
}

ext {
	guava = 'com.google.guava:guava:17.0'
	bukkit = 'org.bukkit:bukkit:1.8.3-R0.1-SNAPSHOT'
	flint = project('Flint')
    metrics = 'org.mcstats.bukkit:metrics:R7'
    updater = 'net.gravitydevelopment.updater:updater:2.3'
}

// Project dependencies
dependencies {
    compile guava
	compile bukkit
	shadow flint
	shadow metrics
	shadow updater
}

// Read source files using UTF-8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    classifier = 'base'
}

processResources {
    from 'LICENSE'
}

// License header formatting
license {
    header file('LICENSE')
    excludes([
            '**/*.properties',
            '**/*.yml'
    ])
    sourceSets = project.sourceSets
    ignoreFailures false
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

// check code style
checkstyle {
    configProperties = [
            'name'		: project.name,
            'year'		: project.inceptionYear
    ]
    configFile = file('etc/checkstyle.xml')
}

tasks.withType(Checkstyle){
    exclude '**/*.properties'
    exclude '**/*.yml'
}

shadowJar {
    configurations = [project.configurations.shadow]
    dependencies {
        exclude dependency('com.google.guava:guava')
        exclude dependency('org.bukkit:bukkit')
    }
	classifier = ''
}

task sourceJar(type: Jar) {
    from sourceSets.main.java
    from sourceSets.main.resources
    classifier = 'sources'
}

artifacts {
    archives shadowJar
    archives sourceJar
}

project('Flint') {
    afterEvaluate {
        configure([assemble, build, compileTestJava, javadoc, javadocJar, sourceJar, licenseFormat]) {
            enabled = false
        }
        tasks.withType(VerificationTask) {
            enabled = false
        }
        tasks.withType(Checkstyle) {
            enabled = false
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
